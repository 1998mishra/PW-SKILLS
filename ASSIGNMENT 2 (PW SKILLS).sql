 -- Question 1: Retrieve the total number of rentals made in the Sakila database. 
select count(*) as total_Rental_Count from rental;

-- Question 2: Find the average rental duration (in days) of movies rented from the Sakila database.
select avg(rental_duration) as Avg_rental_duration  from film;

-- String Functions: 

-- Question 3: Display the first name and last name of customers in uppercase. 



-- Question 4: Extract the month from the rental date and display it alongside the rental ID. 
select rental_id, month(rental_date) as rental_month from rental;

-- GROUP BY:

-- Question 5: Retrieve the count of rentals for each customer (display customer ID and the count of rentals).
select customer_id, count(*) from rental group by customer_id;

-- Question 6: Find the total revenue generated by each store. 
select st.store_id, sum(p.amount) as total_revenue from payment as p 
join staff as s on p.staff_id = s.staff_id                 -- to connect payment & staff table
join store as st on st.store_id = s.store_id               -- to connect store & staff table
group by st.store_id;

-- Joins:

-- Question 7: Display the title of the movie, customer s first name, and last name who rented it. 
SELECT 
    title, first_name, last_name
FROM
    film
        JOIN
    inventory ON film.film_id = inventory.film_id
        JOIN
    rental ON inventory.inventory_id = rental.rental_id
        JOIN
    customer ON rental.customer_id = customer.customer_id;

-- Question 8: Retrieve the names of all actors who have appeared in the film "Gone with the Wind." 
SELECT 
    first_name,last_name
FROM
    actor
        join
    film_actor ON actor.actor_id = film_actor.actor_id
        JOIN
    film ON film_actor.film_id = film.film_id
WHERE
   title = 'gone with the wind';

-- GROUP BY: 

-- Question 9 : Determine the total number of rentals for each category of movies.
select category_id, count(*)  as total_number_of_rental from film_category as fc
join inventory as i on fc.film_id = i.film_id
join rental as r on r.inventory_id = i.inventory_id
group by fc.category_id;

-- Question 10 : Find the average rental rate of movies in each language. 
select l.name , avg(f.rental_rate) from language as l 
join film as f on l.language_id = f.language_id
group by name;

-- Question 11 : Retrieve the customer names along with the total amount they've spent on rentals. 
select c.first_name,  c.last_name , sum(p.amount) as Total_rental from customer as c 
join payment as p on c.customer_id = p.customer_id
-- as per hints we need to join rental table why ?  
-- join rental as r on r.rental_id = p.rental_id
group by c.first_name,  c.last_name;

-- Question 12 : List the titles of movies rented by each customer in a particular city (e.g., 'London'). 
select f.title, ct.city from film as f 
join inventory as i on f.film_id = i.film_id
join rental as r on i.inventory_id = r.inventory_id
join customer as c on r.customer_id = c.customer_id
join address as a on a.address_id = c.address_id
join city as ct on a.city_id = ct.city_id
group by f.title,ct.city;

-- Advanced Joins and GROUP BY: 

-- Question 13 : Display the top 5 rented movies along with the number of times they've been rented. 
select f.title, count(r.rental_id) as Number_of_times_rented from film as f
join inventory as i on f.film_id = i.film_id
join rental as r on i.inventory_id = r.inventory_id
group by f.title
order by Number_of_times_rented desc limit 5;

-- Question 14 : Determine the customers who have rented movies from both stores (store ID 1 and store ID 2). 
select c.store_Id, count(r.rental_id) as Rental_count from rental as r 
join inventory as i on i.inventory_id = r.inventory_id
join customer as c on c.store_id = i.store_id
group by c.store_Id ;